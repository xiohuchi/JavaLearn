package greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import greendao.TBase;
import greendao.TDatabase;
import greendao.TDesign;
import greendao.TEe;
import greendao.TFrame;
import greendao.TProgress;
import greendao.TUp;
import greendao.TWeb;

import greendao.TBaseDao;
import greendao.TDatabaseDao;
import greendao.TDesignDao;
import greendao.TEeDao;
import greendao.TFrameDao;
import greendao.TProgressDao;
import greendao.TUpDao;
import greendao.TWebDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig tBaseDaoConfig;
    private final DaoConfig tDatabaseDaoConfig;
    private final DaoConfig tDesignDaoConfig;
    private final DaoConfig tEeDaoConfig;
    private final DaoConfig tFrameDaoConfig;
    private final DaoConfig tProgressDaoConfig;
    private final DaoConfig tUpDaoConfig;
    private final DaoConfig tWebDaoConfig;

    private final TBaseDao tBaseDao;
    private final TDatabaseDao tDatabaseDao;
    private final TDesignDao tDesignDao;
    private final TEeDao tEeDao;
    private final TFrameDao tFrameDao;
    private final TProgressDao tProgressDao;
    private final TUpDao tUpDao;
    private final TWebDao tWebDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        tBaseDaoConfig = daoConfigMap.get(TBaseDao.class).clone();
        tBaseDaoConfig.initIdentityScope(type);

        tDatabaseDaoConfig = daoConfigMap.get(TDatabaseDao.class).clone();
        tDatabaseDaoConfig.initIdentityScope(type);

        tDesignDaoConfig = daoConfigMap.get(TDesignDao.class).clone();
        tDesignDaoConfig.initIdentityScope(type);

        tEeDaoConfig = daoConfigMap.get(TEeDao.class).clone();
        tEeDaoConfig.initIdentityScope(type);

        tFrameDaoConfig = daoConfigMap.get(TFrameDao.class).clone();
        tFrameDaoConfig.initIdentityScope(type);

        tProgressDaoConfig = daoConfigMap.get(TProgressDao.class).clone();
        tProgressDaoConfig.initIdentityScope(type);

        tUpDaoConfig = daoConfigMap.get(TUpDao.class).clone();
        tUpDaoConfig.initIdentityScope(type);

        tWebDaoConfig = daoConfigMap.get(TWebDao.class).clone();
        tWebDaoConfig.initIdentityScope(type);

        tBaseDao = new TBaseDao(tBaseDaoConfig, this);
        tDatabaseDao = new TDatabaseDao(tDatabaseDaoConfig, this);
        tDesignDao = new TDesignDao(tDesignDaoConfig, this);
        tEeDao = new TEeDao(tEeDaoConfig, this);
        tFrameDao = new TFrameDao(tFrameDaoConfig, this);
        tProgressDao = new TProgressDao(tProgressDaoConfig, this);
        tUpDao = new TUpDao(tUpDaoConfig, this);
        tWebDao = new TWebDao(tWebDaoConfig, this);

        registerDao(TBase.class, tBaseDao);
        registerDao(TDatabase.class, tDatabaseDao);
        registerDao(TDesign.class, tDesignDao);
        registerDao(TEe.class, tEeDao);
        registerDao(TFrame.class, tFrameDao);
        registerDao(TProgress.class, tProgressDao);
        registerDao(TUp.class, tUpDao);
        registerDao(TWeb.class, tWebDao);
    }
    
    public void clear() {
        tBaseDaoConfig.clearIdentityScope();
        tDatabaseDaoConfig.clearIdentityScope();
        tDesignDaoConfig.clearIdentityScope();
        tEeDaoConfig.clearIdentityScope();
        tFrameDaoConfig.clearIdentityScope();
        tProgressDaoConfig.clearIdentityScope();
        tUpDaoConfig.clearIdentityScope();
        tWebDaoConfig.clearIdentityScope();
    }

    public TBaseDao getTBaseDao() {
        return tBaseDao;
    }

    public TDatabaseDao getTDatabaseDao() {
        return tDatabaseDao;
    }

    public TDesignDao getTDesignDao() {
        return tDesignDao;
    }

    public TEeDao getTEeDao() {
        return tEeDao;
    }

    public TFrameDao getTFrameDao() {
        return tFrameDao;
    }

    public TProgressDao getTProgressDao() {
        return tProgressDao;
    }

    public TUpDao getTUpDao() {
        return tUpDao;
    }

    public TWebDao getTWebDao() {
        return tWebDao;
    }

}
